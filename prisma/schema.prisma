// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id                  String       @id @default(cuid())
  name                String?
  email               String?      @unique
  emailVerified       DateTime?
  image               String?
  accounts            Account[]
  sessions            Session[]
  summonerName        String?
  positions           String?
  tier                Int?
  teamId              String?      @unique
  team                Team?        @relation(fields: [teamId], references: [id])
  sentRequests        Request[]
  receivedInvitations Invitation[]
  joinPost            JoinPost?

  @@index([teamId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Team {
  id               String       @id @default(cuid())
  name             String
  chiefId          String
  users            User[]
  receivedRequests Request[]
  sentInvitations  Invitation[]
  recruitPost      RecruitPost?
  minTier          Int?
  maxTier          Int?
  qType            String?
  positions        String?
}

model Request {
  id           String   @id @default(cuid())
  sentUser     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
  teamId       String
  receivedTeam Team     @relation(fields: [teamId], references: [id], onDelete: Cascade)
  rejected     Boolean  @default(false)
  createdAt    DateTime @default(now())

  @@index([userId])
  @@index([teamId])
}

model Invitation {
  id           String   @id @default(cuid())
  teamId       String
  sentTeam     Team     @relation(fields: [teamId], references: [id], onDelete: Cascade)
  userId       String
  receivedUser User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  rejected     Boolean  @default(false)
  createdAt    DateTime @default(now())

  @@index([userId])
  @@index([teamId])
}

model RecruitPost {
  id        String   @id @default(cuid())
  teamId    String   @unique
  team      Team     @relation(fields: [teamId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}

model JoinPost {
  id        String   @id @default(cuid())
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  qType     String?
}
