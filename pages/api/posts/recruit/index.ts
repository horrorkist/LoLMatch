import { NextApiRequest, NextApiResponse } from "next";
import { IFilterParams, Post } from "../../../../app/page";

const posts: Post[] = [
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 1,
    title: "title1",
    content: "content1",
    positions: [1, 2, 3],
    qType: 0,
    minTier: 0,
    maxTier: 9,
  },
  {
    id: 2,
    title: "title2",
    content: "content2",
    positions: [1, 2],
    qType: 1,
    minTier: 5,
    maxTier: 8,
  },
  {
    id: 3,
    title: "title3",
    content: "content3",
    positions: [1, 3],
    qType: 2,
    minTier: 4,
    maxTier: 9,
  },
  {
    id: 4,
    title: "title4",
    content: "content4",
    positions: [2, 3],
    qType: 3,
    minTier: 2,
    maxTier: 8,
  },
];

function getMatchedPosts(
  posts: Post[][] | Post[],
  filterParams: IFilterParams
) {
  const { qType, positions } = filterParams;
  let { minTier, maxTier } = filterParams;
  if (minTier > maxTier) [minTier, maxTier] = [maxTier, minTier];

  const flattened = posts.flat();

  let filteredPosts = flattened.filter((post) => {
    return post.qType === qType;
  });
  filteredPosts = filteredPosts.filter((post) => {
    return (
      positions.includes(0) ||
      post.positions.some((position) => positions.includes(position))
    );
  });
  // filteredPosts = filteredPosts.filter((post) => {
  //   return post.minTier >= minTier && post.maxTier <= maxTier;
  // });

  return filteredPosts;
}

export default function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method === "GET") {
    const { page, limit, filter } = req.query;
    const parsedFilter = JSON.parse(filter as string);
    const filtered = getMatchedPosts(posts, parsedFilter);
    const modified = filtered.slice(
      Number(page) * Number(limit),
      (Number(page) + 1) * Number(limit)
    );
    return res.status(200).json(modified);
  }
}
